#!/bin/bash

GP=$1
REQUIRED_FILE="./ftc"

if [ ! -f ${REQUIRED_FILE} ] 
then
    echo "⚠️ Executable ${REQUIRED_FILE} not found." >> recap_result_$GP
    exit 1
fi

echo "" >> detailed_results_$GP
echo "Résultats pour date" >> detailed_results_$GP

function test_find_date () {
    #sleep 2m
    #echo "Been sleeping 2m"
    touch $2
    #echo "$(./ftc $1 -date $3)"
    if [ ! "$(./ftc $1 -date $3)" == $2 ];
    then
        echo "🔴 Test of the file tree failed for date param \"$3\"" >> detailed_results_$GP
        echo "🔴 Test non validé pour date" >> recap_result_$GP
        exit 1
    else
        echo "✅ Test of find with name succeeded (date: \"$3\")." >> detailed_results_$GP
    fi
}

test_find_date "arbre" "arbre/type/enjoy.js" "2m" 

function test_find_date_several () {
    #sleep $4
    #echo "Been sleeping $4"
    touch $2
    if [ ! "$(./ftc $1 -date "$3"m | wc -l)" == "$(find "$1" "-amin" "-""$3" -type f | wc -l)" ];
    then
        echo "🔴 Test of the file tree failed for date param \"$3\"" >> detailed_results_$GP
        echo "🔴 Test non validé pour date" >> recap_result_$GP
        exit 1
    else
        echo "✅ Test of find with name succeeded (date: \"$3\")." >> detailed_results_$GP
    fi
}

test_find_date_several "arbre" "arbre/think/art/less/either.ppt" "4" "1m"
test_find_date_several "arbre" "arbre/think/art/marriage/knowledge/always.ods" "4" "0"
test_find_date_several "arbre" "arbre/think/sea/this/free.txt" "4" "0"

echo "✅ Test validé pour date" >> recap_result_$GP